---
import { getComponentMetadata } from "@/lib/component-utils";

interface Props {
	showPlaygroundLinks?: boolean;
	sortBy?: "status" | "date";
}

const { showPlaygroundLinks = false, sortBy = "status" } = Astro.props;

// This now returns metadata from the component registry
const availableComponents = await getComponentMetadata();

const componentsArray = Array.isArray(availableComponents)
	? availableComponents
	: [availableComponents].filter(Boolean);

// Sort components based on the sortBy prop
const sortedComponents = componentsArray.sort((a, b) => {
	if (sortBy === "date" && a?.lastUpdated && b?.lastUpdated) {
		return (
			new Date(b.lastUpdated).getTime() - new Date(a.lastUpdated).getTime()
		);
	}
	const statusOrder = { completed: 0, "in-progress": 1, planned: 2 };
	const statusA = a?.status || "planned";
	const statusB = b?.status || "planned";
	return statusOrder[statusA] - statusOrder[statusB];
});
---

<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
	{
		sortedComponents
			.filter((component) => component !== null)
			.map((component) => (
				<a
					href={`/playground/${component.name.toLowerCase()}`}
					class="block bg-card hover:bg-card/90 border-2 border-border rounded-lg p-6 transition-colors shadow-md hover:shadow-lg">
					<div class="flex justify-between items-start mb-4">
						<h3 class="text-xl font-medium">{component.name}</h3>
						<span
							class={`text-xs px-2 py-1 rounded ${
								component.status === "completed"
									? "bg-primary/20 text-primary"
									: component.status === "in-progress"
										? "bg-chart-4/20 text-chart-4"
										: "bg-muted text-muted-foreground"
							}`}>
							{component.status}
						</span>
					</div>
					<p class="text-muted-foreground">{component.description}</p>
				</a>
			))
	}
</div>
